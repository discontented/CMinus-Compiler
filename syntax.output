Terminals unused in grammar

   COMMA
   INT
   STRING
   FLOAT
   CHAR
   BOOL
   VOID
   RETURN
   NOT


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement_list SEMI statement
    3               | statement_list SEMI error
    4               | statement

    5 statement: expression
    6          | if_statement
    7          | while_statement
    8          | LCURL statement RCURL
    9          | %empty

   10 if_statement: IF LPAR expression RPAR statement ELSE statement

   11 while_statement: WHILE LPAR expression RPAR statement

   12 expression: arithmetic_expr
   13           | boolean_expr
   14           | assign_expr

   15 assign_expr: ID '=' expression

   16 arithmetic_expr: arithmetic_expr '+' multiplicative_expr
   17                | arithmetic_expr '-' multiplicative_expr
   18                | multiplicative_expr

   19 multiplicative_expr: multiplicative_expr '*' factor
   20                    | multiplicative_expr '/' factor
   21                    | factor

   22 factor: LPAR arithmetic_expr RPAR
   23       | '-' factor
   24       | NUMBER
   25       | ID

   26 boolean_expr: boolean_expr OR mul_bexpr
   27             | mul_bexpr

   28 mul_bexpr: mul_bexpr AND root_bexpr
   29          | root_bexpr

   30 root_bexpr: '!' root_bexpr
   31           | arithmetic_expr RELOP arithmetic_expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 30
'*' (42) 19
'+' (43) 16
'-' (45) 17 23
'/' (47) 20
'=' (61) 15
error (256) 3
IF (258) 10
WHILE (259) 11
ELSE (260) 10
SEMI (261) 2 3
COMMA (262)
LPAR (263) 10 11 22
RPAR (264) 10 11 22
LCURL (265) 8
RCURL (266) 8
INT (267)
STRING (268)
FLOAT (269)
CHAR (270)
BOOL (271)
VOID (272)
RETURN (273)
AND (274) 28
OR (275) 26
NOT (276)
NUMBER (277) 24
ID (278) 15 25
RELOP (279) 31


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
statement_list (33)
    on left: 2 3 4, on right: 1 2 3
statement (34)
    on left: 5 6 7 8 9, on right: 2 4 8 10 11
if_statement (35)
    on left: 10, on right: 6
while_statement (36)
    on left: 11, on right: 7
expression (37)
    on left: 12 13 14, on right: 5 10 11 15
assign_expr (38)
    on left: 15, on right: 14
arithmetic_expr (39)
    on left: 16 17 18, on right: 12 16 17 22 31
multiplicative_expr (40)
    on left: 19 20 21, on right: 16 17 18 19 20
factor (41)
    on left: 22 23 24 25, on right: 19 20 21 23
boolean_expr (42)
    on left: 26 27, on right: 13 26
mul_bexpr (43)
    on left: 28 29, on right: 26 27 28
root_bexpr (44)
    on left: 30 31, on right: 28 29 30


State 0

    0 $accept: . program $end

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    LPAR    shift, and go to state 3
    LCURL   shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    $default  reduce using rule 9 (statement)

    program              go to state 9
    statement_list       go to state 10
    statement            go to state 11
    if_statement         go to state 12
    while_statement      go to state 13
    expression           go to state 14
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 1

   10 if_statement: IF . LPAR expression RPAR statement ELSE statement

    LPAR  shift, and go to state 22


State 2

   11 while_statement: WHILE . LPAR expression RPAR statement

    LPAR  shift, and go to state 23


State 3

   22 factor: LPAR . arithmetic_expr RPAR

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7

    arithmetic_expr      go to state 25
    multiplicative_expr  go to state 17
    factor               go to state 18


State 4

    8 statement: LCURL . statement RCURL

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    LPAR    shift, and go to state 3
    LCURL   shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    $default  reduce using rule 9 (statement)

    statement            go to state 26
    if_statement         go to state 12
    while_statement      go to state 13
    expression           go to state 14
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 5

   24 factor: NUMBER .

    $default  reduce using rule 24 (factor)


State 6

   15 assign_expr: ID . '=' expression
   25 factor: ID .

    '='  shift, and go to state 27

    $default  reduce using rule 25 (factor)


State 7

   23 factor: '-' . factor

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7

    factor  go to state 28


State 8

   30 root_bexpr: '!' . root_bexpr

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    arithmetic_expr      go to state 29
    multiplicative_expr  go to state 17
    factor               go to state 18
    root_bexpr           go to state 30


State 9

    0 $accept: program . $end

    $end  shift, and go to state 31


State 10

    1 program: statement_list .
    2 statement_list: statement_list . SEMI statement
    3               | statement_list . SEMI error

    SEMI  shift, and go to state 32

    $default  reduce using rule 1 (program)


State 11

    4 statement_list: statement .

    $default  reduce using rule 4 (statement_list)


State 12

    6 statement: if_statement .

    $default  reduce using rule 6 (statement)


State 13

    7 statement: while_statement .

    $default  reduce using rule 7 (statement)


State 14

    5 statement: expression .

    $default  reduce using rule 5 (statement)


State 15

   14 expression: assign_expr .

    $default  reduce using rule 14 (expression)


State 16

   12 expression: arithmetic_expr .
   16 arithmetic_expr: arithmetic_expr . '+' multiplicative_expr
   17                | arithmetic_expr . '-' multiplicative_expr
   31 root_bexpr: arithmetic_expr . RELOP arithmetic_expr

    RELOP  shift, and go to state 33
    '+'    shift, and go to state 34
    '-'    shift, and go to state 35

    $default  reduce using rule 12 (expression)


State 17

   18 arithmetic_expr: multiplicative_expr .
   19 multiplicative_expr: multiplicative_expr . '*' factor
   20                    | multiplicative_expr . '/' factor

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 18 (arithmetic_expr)


State 18

   21 multiplicative_expr: factor .

    $default  reduce using rule 21 (multiplicative_expr)


State 19

   13 expression: boolean_expr .
   26 boolean_expr: boolean_expr . OR mul_bexpr

    OR  shift, and go to state 38

    $default  reduce using rule 13 (expression)


State 20

   27 boolean_expr: mul_bexpr .
   28 mul_bexpr: mul_bexpr . AND root_bexpr

    AND  shift, and go to state 39

    $default  reduce using rule 27 (boolean_expr)


State 21

   29 mul_bexpr: root_bexpr .

    $default  reduce using rule 29 (mul_bexpr)


State 22

   10 if_statement: IF LPAR . expression RPAR statement ELSE statement

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    expression           go to state 40
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 23

   11 while_statement: WHILE LPAR . expression RPAR statement

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    expression           go to state 41
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 24

   25 factor: ID .

    $default  reduce using rule 25 (factor)


State 25

   16 arithmetic_expr: arithmetic_expr . '+' multiplicative_expr
   17                | arithmetic_expr . '-' multiplicative_expr
   22 factor: LPAR arithmetic_expr . RPAR

    RPAR  shift, and go to state 42
    '+'   shift, and go to state 34
    '-'   shift, and go to state 35


State 26

    8 statement: LCURL statement . RCURL

    RCURL  shift, and go to state 43


State 27

   15 assign_expr: ID '=' . expression

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    expression           go to state 44
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 28

   23 factor: '-' factor .

    $default  reduce using rule 23 (factor)


State 29

   16 arithmetic_expr: arithmetic_expr . '+' multiplicative_expr
   17                | arithmetic_expr . '-' multiplicative_expr
   31 root_bexpr: arithmetic_expr . RELOP arithmetic_expr

    RELOP  shift, and go to state 33
    '+'    shift, and go to state 34
    '-'    shift, and go to state 35


State 30

   30 root_bexpr: '!' root_bexpr .

    $default  reduce using rule 30 (root_bexpr)


State 31

    0 $accept: program $end .

    $default  accept


State 32

    2 statement_list: statement_list SEMI . statement
    3               | statement_list SEMI . error

    error   shift, and go to state 45
    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    LPAR    shift, and go to state 3
    LCURL   shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    $end  reduce using rule 9 (statement)
    SEMI  reduce using rule 9 (statement)

    statement            go to state 46
    if_statement         go to state 12
    while_statement      go to state 13
    expression           go to state 14
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 33

   31 root_bexpr: arithmetic_expr RELOP . arithmetic_expr

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7

    arithmetic_expr      go to state 47
    multiplicative_expr  go to state 17
    factor               go to state 18


State 34

   16 arithmetic_expr: arithmetic_expr '+' . multiplicative_expr

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7

    multiplicative_expr  go to state 48
    factor               go to state 18


State 35

   17 arithmetic_expr: arithmetic_expr '-' . multiplicative_expr

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7

    multiplicative_expr  go to state 49
    factor               go to state 18


State 36

   19 multiplicative_expr: multiplicative_expr '*' . factor

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7

    factor  go to state 50


State 37

   20 multiplicative_expr: multiplicative_expr '/' . factor

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7

    factor  go to state 51


State 38

   26 boolean_expr: boolean_expr OR . mul_bexpr

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    arithmetic_expr      go to state 29
    multiplicative_expr  go to state 17
    factor               go to state 18
    mul_bexpr            go to state 52
    root_bexpr           go to state 21


State 39

   28 mul_bexpr: mul_bexpr AND . root_bexpr

    LPAR    shift, and go to state 3
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 24
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    arithmetic_expr      go to state 29
    multiplicative_expr  go to state 17
    factor               go to state 18
    root_bexpr           go to state 53


State 40

   10 if_statement: IF LPAR expression . RPAR statement ELSE statement

    RPAR  shift, and go to state 54


State 41

   11 while_statement: WHILE LPAR expression . RPAR statement

    RPAR  shift, and go to state 55


State 42

   22 factor: LPAR arithmetic_expr RPAR .

    $default  reduce using rule 22 (factor)


State 43

    8 statement: LCURL statement RCURL .

    $default  reduce using rule 8 (statement)


State 44

   15 assign_expr: ID '=' expression .

    $default  reduce using rule 15 (assign_expr)


State 45

    3 statement_list: statement_list SEMI error .

    $default  reduce using rule 3 (statement_list)


State 46

    2 statement_list: statement_list SEMI statement .

    $default  reduce using rule 2 (statement_list)


State 47

   16 arithmetic_expr: arithmetic_expr . '+' multiplicative_expr
   17                | arithmetic_expr . '-' multiplicative_expr
   31 root_bexpr: arithmetic_expr RELOP arithmetic_expr .

    '+'  shift, and go to state 34
    '-'  shift, and go to state 35

    $default  reduce using rule 31 (root_bexpr)


State 48

   16 arithmetic_expr: arithmetic_expr '+' multiplicative_expr .
   19 multiplicative_expr: multiplicative_expr . '*' factor
   20                    | multiplicative_expr . '/' factor

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 16 (arithmetic_expr)


State 49

   17 arithmetic_expr: arithmetic_expr '-' multiplicative_expr .
   19 multiplicative_expr: multiplicative_expr . '*' factor
   20                    | multiplicative_expr . '/' factor

    '*'  shift, and go to state 36
    '/'  shift, and go to state 37

    $default  reduce using rule 17 (arithmetic_expr)


State 50

   19 multiplicative_expr: multiplicative_expr '*' factor .

    $default  reduce using rule 19 (multiplicative_expr)


State 51

   20 multiplicative_expr: multiplicative_expr '/' factor .

    $default  reduce using rule 20 (multiplicative_expr)


State 52

   26 boolean_expr: boolean_expr OR mul_bexpr .
   28 mul_bexpr: mul_bexpr . AND root_bexpr

    AND  shift, and go to state 39

    $default  reduce using rule 26 (boolean_expr)


State 53

   28 mul_bexpr: mul_bexpr AND root_bexpr .

    $default  reduce using rule 28 (mul_bexpr)


State 54

   10 if_statement: IF LPAR expression RPAR . statement ELSE statement

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    LPAR    shift, and go to state 3
    LCURL   shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    $default  reduce using rule 9 (statement)

    statement            go to state 56
    if_statement         go to state 12
    while_statement      go to state 13
    expression           go to state 14
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 55

   11 while_statement: WHILE LPAR expression RPAR . statement

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    LPAR    shift, and go to state 3
    LCURL   shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    $default  reduce using rule 9 (statement)

    statement            go to state 57
    if_statement         go to state 12
    while_statement      go to state 13
    expression           go to state 14
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 56

   10 if_statement: IF LPAR expression RPAR statement . ELSE statement

    ELSE  shift, and go to state 58


State 57

   11 while_statement: WHILE LPAR expression RPAR statement .

    $default  reduce using rule 11 (while_statement)


State 58

   10 if_statement: IF LPAR expression RPAR statement ELSE . statement

    IF      shift, and go to state 1
    WHILE   shift, and go to state 2
    LPAR    shift, and go to state 3
    LCURL   shift, and go to state 4
    NUMBER  shift, and go to state 5
    ID      shift, and go to state 6
    '-'     shift, and go to state 7
    '!'     shift, and go to state 8

    $default  reduce using rule 9 (statement)

    statement            go to state 59
    if_statement         go to state 12
    while_statement      go to state 13
    expression           go to state 14
    assign_expr          go to state 15
    arithmetic_expr      go to state 16
    multiplicative_expr  go to state 17
    factor               go to state 18
    boolean_expr         go to state 19
    mul_bexpr            go to state 20
    root_bexpr           go to state 21


State 59

   10 if_statement: IF LPAR expression RPAR statement ELSE statement .

    $default  reduce using rule 10 (if_statement)
